# -*- coding: utf-8 -*-
"""Tablas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f8J8HIZRyA0bEp0a70DWYwVRh0gOWbLv
"""

import pandas as pd

#Create a dataset
# Let'sbuild the values lists
value_n_list = ['Andres', 'Phillip', 'John']
print (value_n_list)

value_w_list =[50,      78,     91.5]#[kg]
value_h_list = [1.76,  1.87,    1.69 ]#[m]
#value_bmi_list will be calculated: bmi =w/(h^2)
#value_bmi_list =[25, 25, 25] #init values [kg/m2]

#Let's  use a dictoniary ({key:value})
#with the format {"str":list}
data_dict= {"name":value_n_list,
            "weight":value_w_list,
            "height":value_h_list}#,
            #"BMI": value_bmi_list

print (data_dict)

#Turn a dictionary into a dataframe
df = pd.DataFrame(data_dict)
print (df)
# Call a variable
df

#Import libraries
import pandas as pd

#Create a dataset
# Let'sbuild the values lists
value_n_list = ['Andres', 'Phillip', 'John', 'Sofia', 'Valentina', 'Alejandra', 'Nicolas', 'Gabriel', 'Diana', 'Elizabeth']
print (value_n_list)

value_w_list =[50,      78,     91.5,      45,      60,      78.5,     70.5,      60,    65.5,     78 ]#[kg]
value_h_list =[1.76,   1.87,    1.69,     1.56,    1.65,     1.71,     1.75,     1.67,   1.73,     75 ]#[m]
#value_bmi_list will be calculated: bmi =w/(h^2)
#value_bmi_list =[25, 25, 25] #init values [kg/m2]

#Let's  use a dictoniary ({key:value})
#with the format {"str":list}
data_dict= {"name":value_n_list,
            "weight":value_w_list,
            "height":value_h_list}#,
            #"BMI": value_bmi_list}

print (data_dict)

#Turn a dictionary into a dataframe
df = pd.DataFrame(data_dict)
print (df)

# Call a variable
df

#prompt: Con DataFrame df: add another colum
df['bmi'] =df['weight']/(df['height']**2)
df

def classify_bmi(bmi):
  if bmi < 18.5:
    return 'Underweight'
  elif bmi >= 18.5 and bmi < 25:
    return 'Normal'
  elif bmi >= 25 and bmi <= 29.9:
    return 'Overweight'
  else:
    return 'Obesity'

df['classification'] = df['bmi'].apply(classify_bmi)
df

